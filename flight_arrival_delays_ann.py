# -*- coding: utf-8 -*-
"""Flight Arrival Delays ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GOMyC22UhQG9nWPr6YmhcNtWLsxBEbl5
"""

import numpy as np
import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt 
import os
from sklearn.cross_validation import train_test_split
from sklearn.preprocessing import LabelEncoder
import warnings
warnings.filterwarnings('ignore')
# %matplotlib inline
get_ipython().magic('matplotlib inline')
mpl.rcParams.update({'font.size': 12})
mpl.rc('xtick', labelsize=8) 
mpl.rc('ytick', labelsize=8)

#reading in all datasets from folder
path = "/Users/Abigail/Desktop/LargeDataset"
os.chdir(path)
df = pd.DataFrame()
for file in os.listdir(os.getcwd()): #will read files from current working directory defined above in path
    loop_ = pd.read_csv(file, low_memory=False) #sets low memory to false to ignore different datatypes
    df = df.append(loop_)
    
print(df)

#fixing class imbalance between delayed and ontime to avoid bias in training the classifier
#remember delayed arrivals >= 15 minutes and = 1
class_value = df['ArrDel15'].value_counts()
delayed = len(df[df['ArrDel15'] ==1]) #number of minority class/delayed flights
# = 652,602
on_time = len(df[df['ArrDel15']==0]) # = 3,107,924
#using undersampling
on_time = df[df['ArrDel15']==0].tail(class_value.min()) 
delayed = df[df['ArrDel15']==1]
data = on_time.append(delayed) #undersampled data
del on_time, delayed
data.sort_values(['Year', 'Month', 'DayofMonth', 'DayOfWeek'], ascending=[False, False, False, False])
print('Class Balanced out:', data['ArrDel15'].value_counts())

#fix missing data, removal or replacement 
#removing variables missing >80 % of values
variables_remove = ['CarrierDelay', 'WeatherDelay', 'NASDelay', 'SecurityDelay',
'LateAircraftDelay', 'FirstDepTime', 'TotalAddGTime', 'LongestAddGTime',
'DivAirportLandings', 'DivReachedDest', 'DivActualElapsedTime', 'DivArrDelay'
'DivDistance', 'Div1Airport', 'Div1AirportID', 'Div1AirportSeqID',
'Div1WheelsOn', 'Div1TotalGTime', 'Div1LongestGTime', 'Div3WheelsOff', 'Div3TailNum',
'Div4Airport', 'Div4AirportID', 'Div4AirportSeqID', 'Div4WheelsOn',
'Div4TotalGTime', 'Div4LongestGTime', 'Div4WheelsOff', 'Div4TailNum',
'Div5Airport', 'Div5AirportID', 'Div5AirportSeqID', 'Div5WheelsOn', 'Div5TotalGTime',
'Div5LongestGTime', 'Div5WheelsOff', 'Div5TailNum']
df = df.dropna(axis='columns', how='all')
print(len(df.columns))

#data analysis between variables in relation to arrival delay
#relation between airline carrier and delays, what airlines have most chronic delays
avgLate = np.sum(data['ArrDel15'])/len(data['ArrDel15'])
feats = ['Month','DayOfWeek', 'DayofMonth', 'DestAirportID','UniqueCarrier',
             'DepDelay', 'Distance', 'FlightNum']
for i,pred in enumerate(feats):
    plt.figure(i, figsize=(30, 10))
    group = data.groupby([pred], as_index=False).aggregate(np.mean)[[pred, 'ArrDel15']]
    group.sort_values(by=pred, inplace=True)    
    group.plot.bar(x=pred, y='ArrDel15')
    plt.axhline(y=avgLate, label='Average')
    plt.ylabel('Percent of Delayed Arrival Flights')
    plt.title(pred)
    plt.legend().remove()
    plt.show()

"""What did I notice about the data?

- Flight Delays tend to peak during the end of months and in the middle
- The first 4 months of 2018 account for the majority of flight delays (as well as december)
- possibly consider plotting delays on important holidays as well
- November for some reason, accounts for the smallest amount of flight delays
- May is also below the average delay rate
- MQ and YV have the highest delays
- Delay Average line is at 50%
"""

#label encoding and converting categorical variables to dummy variables (numeric)
features = ['']

#removing redundant features from dataset